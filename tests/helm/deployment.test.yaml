# Helm template tests for deployment.yaml
# These tests validate the Kubernetes deployment manifests generated by Helm

suite: test deployment templates
tests:
  - it: should render api deployment when enabled
    set:
      api.enabled: true
      api.replicaCount: 3
      api.image.repository: n8n-scraper/api
      api.image.tag: v1.0.0
      config.server.port: 8000
    asserts:
      - hasDocuments:
          count: 4  # api, worker, frontend, realtime
      - isKind:
          of: Deployment
      - equal:
          path: metadata.name
          value: RELEASE-NAME-n8n-scraper-api
      - equal:
          path: spec.replicas
          value: 3
      - equal:
          path: spec.template.spec.containers[0].image
          value: n8n-scraper/api:v1.0.0
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 8000

  - it: should not render api deployment when disabled
    set:
      api.enabled: false
    asserts:
      - hasDocuments:
          count: 3  # worker, frontend, realtime (assuming others are enabled)

  - it: should render worker deployment when enabled
    set:
      worker.enabled: true
      worker.replicaCount: 2
      worker.image.repository: n8n-scraper/worker
      worker.image.tag: v1.0.0
    asserts:
      - contains:
          path: spec.template.spec.containers[0].command
          content: "python"
      - contains:
          path: spec.template.spec.containers[0].command
          content: "-m"
      - contains:
          path: spec.template.spec.containers[0].command
          content: "n8n_scraper.automation.automation_service"

  - it: should render frontend deployment when enabled
    set:
      frontend.enabled: true
      frontend.replicaCount: 2
      frontend.image.repository: n8n-scraper/frontend
      frontend.image.tag: v1.0.0
      frontend.service.targetPort: 3000
    asserts:
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 3000
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: NEXT_PUBLIC_API_URL
            value: "http://RELEASE-NAME-n8n-scraper-api:80"

  - it: should render realtime deployment when enabled
    set:
      realtime.enabled: true
      realtime.replicaCount: 1
      realtime.image.repository: n8n-scraper/realtime
      realtime.image.tag: v1.0.0
      realtime.service.targetPort: 8080
    asserts:
      - contains:
          path: spec.template.spec.containers[0].command
          content: "python"
      - contains:
          path: spec.template.spec.containers[0].command
          content: "-m"
      - contains:
          path: spec.template.spec.containers[0].command
          content: "n8n_scraper.realtime.collaboration_engine"

  - it: should include security context for all deployments
    set:
      api.enabled: true
      worker.enabled: true
      frontend.enabled: true
      realtime.enabled: true
    asserts:
      - equal:
          path: spec.template.spec.securityContext.runAsNonRoot
          value: true
      - isNotEmpty:
          path: spec.template.spec.securityContext.runAsUser
      - isNotEmpty:
          path: spec.template.spec.securityContext.fsGroup

  - it: should include resource limits and requests
    set:
      api.enabled: true
      api.resources:
        limits:
          cpu: 1000m
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 512Mi
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: 1000m
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: 1Gi
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: 500m
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: 512Mi

  - it: should include environment variables from secrets
    set:
      api.enabled: true
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-n8n-scraper-secrets
                key: database-url
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: REDIS_URL
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-n8n-scraper-secrets
                key: redis-url
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: OPENAI_API_KEY
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-n8n-scraper-secrets
                key: openai-api-key

  - it: should include volume mounts for data storage
    set:
      api.enabled: true
      persistence.enabled: true
    asserts:
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: data-storage
            mountPath: /app/data
      - contains:
          path: spec.template.spec.volumes
          content:
            name: data-storage
            persistentVolumeClaim:
              claimName: RELEASE-NAME-n8n-scraper-data

  - it: should use emptyDir when persistence is disabled
    set:
      api.enabled: true
      persistence.enabled: false
    asserts:
      - contains:
          path: spec.template.spec.volumes
          content:
            name: data-storage
            emptyDir: {}

  - it: should include health checks for api deployment
    set:
      api.enabled: true
      api.livenessProbe:
        httpGet:
          path: /health
          port: http
        initialDelaySeconds: 30
        periodSeconds: 10
      api.readinessProbe:
        httpGet:
          path: /ready
          port: http
        initialDelaySeconds: 5
        periodSeconds: 5
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.httpGet.path
          value: /health
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.httpGet.path
          value: /ready
      - equal:
          path: spec.template.spec.containers[0].startupProbe.httpGet.path
          value: /health

  - it: should include prometheus annotations
    set:
      api.enabled: true
    asserts:
      - equal:
          path: spec.template.metadata.annotations["prometheus.io/scrape"]
          value: "true"
      - equal:
          path: spec.template.metadata.annotations["prometheus.io/port"]
          value: "9090"
      - equal:
          path: spec.template.metadata.annotations["prometheus.io/path"]
          value: "/metrics"

  - it: should include node selector when specified
    set:
      api.enabled: true
      api.nodeSelector:
        kubernetes.io/arch: amd64
        node-type: compute
    asserts:
      - equal:
          path: spec.template.spec.nodeSelector["kubernetes.io/arch"]
          value: amd64
      - equal:
          path: spec.template.spec.nodeSelector["node-type"]
          value: compute

  - it: should include tolerations when specified
    set:
      api.enabled: true
      api.tolerations:
        - key: "node-type"
          operator: "Equal"
          value: "compute"
          effect: "NoSchedule"
    asserts:
      - contains:
          path: spec.template.spec.tolerations
          content:
            key: "node-type"
            operator: "Equal"
            value: "compute"
            effect: "NoSchedule"

  - it: should include affinity rules when specified
    set:
      api.enabled: true
      api.affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
    asserts:
      - isNotEmpty:
          path: spec.template.spec.affinity.nodeAffinity

  - it: should include custom environment variables
    set:
      api.enabled: true
      api.env:
        CUSTOM_VAR: "custom_value"
        DEBUG_MODE: "true"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: CUSTOM_VAR
            value: "custom_value"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DEBUG_MODE
            value: "true"

  - it: should include image pull secrets when specified
    set:
      api.enabled: true
      global.imagePullSecrets:
        - name: regcred
        - name: dockerhub-secret
    asserts:
      - contains:
          path: spec.template.spec.imagePullSecrets
          content:
            name: regcred
      - contains:
          path: spec.template.spec.imagePullSecrets
          content:
            name: dockerhub-secret

  - it: should use correct service account names
    set:
      api.enabled: true
      worker.enabled: true
      realtime.enabled: true
    asserts:
      - equal:
          path: spec.template.spec.serviceAccountName
          value: RELEASE-NAME-n8n-scraper-api
        documentIndex: 0  # API deployment
      - equal:
          path: spec.template.spec.serviceAccountName
          value: RELEASE-NAME-n8n-scraper-worker
        documentIndex: 1  # Worker deployment
      - equal:
          path: spec.template.spec.serviceAccountName
          value: RELEASE-NAME-n8n-scraper-api
        documentIndex: 3  # Realtime deployment (uses api service account)

  - it: should include rolling update strategy
    set:
      api.enabled: true
    asserts:
      - equal:
          path: spec.strategy.type
          value: RollingUpdate
      - equal:
          path: spec.strategy.rollingUpdate.maxSurge
          value: 1
      - equal:
          path: spec.strategy.rollingUpdate.maxUnavailable
          value: 0

  - it: should include checksum annotations for config changes
    set:
      api.enabled: true
    asserts:
      - isNotEmpty:
          path: spec.template.metadata.annotations["checksum/config"]
      - isNotEmpty:
          path: spec.template.metadata.annotations["checksum/secret"]

  - it: should include read-only root filesystem security context
    set:
      api.enabled: true
    asserts:
      - equal:
          path: spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem
          value: true
      - equal:
          path: spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation
          value: false
      - contains:
          path: spec.template.spec.containers[0].securityContext.capabilities.drop
          content: ALL