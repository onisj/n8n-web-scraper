apiVersion: v1
kind: Service
metadata:
  name: n8n-scraper-api
  namespace: n8n-scraper
  labels:
    app.kubernetes.io/name: n8n-scraper
    app.kubernetes.io/component: api
    app.kubernetes.io/version: "1.0.0"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8000
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app.kubernetes.io/name: n8n-scraper
    app.kubernetes.io/component: api
---
apiVersion: v1
kind: Service
metadata:
  name: n8n-scraper-frontend
  namespace: n8n-scraper
  labels:
    app.kubernetes.io/name: n8n-scraper
    app.kubernetes.io/component: frontend
    app.kubernetes.io/version: "1.0.0"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 3000
    targetPort: http
    protocol: TCP
  selector:
    app.kubernetes.io/name: n8n-scraper
    app.kubernetes.io/component: frontend
---
apiVersion: v1
kind: Service
metadata:
  name: n8n-scraper-worker-metrics
  namespace: n8n-scraper
  labels:
    app.kubernetes.io/name: n8n-scraper
    app.kubernetes.io/component: worker
    app.kubernetes.io/version: "1.0.0"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app.kubernetes.io/name: n8n-scraper
    app.kubernetes.io/component: worker
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: n8n-scraper-ingress
  namespace: n8n-scraper
  labels:
    app.kubernetes.io/name: n8n-scraper
    app.kubernetes.io/component: ingress
    app.kubernetes.io/version: "1.0.0"
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/websocket-services: "n8n-scraper-api"
    nginx.ingress.kubernetes.io/proxy-set-headers: |
      X-Forwarded-Proto $scheme;
      X-Forwarded-For $proxy_add_x_forwarded_for;
      X-Real-IP $remote_addr;
      Host $host;
spec:
  tls:
  - hosts:
    - n8n-scraper.example.com
    - api.n8n-scraper.example.com
    secretName: n8n-scraper-tls
  rules:
  - host: n8n-scraper.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: n8n-scraper-frontend
            port:
              number: 3000
  - host: api.n8n-scraper.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: n8n-scraper-api
            port:
              number: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: chromadb
  namespace: n8n-scraper
  labels:
    app.kubernetes.io/name: chromadb
    app.kubernetes.io/component: database
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8000
    targetPort: 8000
    protocol: TCP
  selector:
    app.kubernetes.io/name: chromadb
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: n8n-scraper
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
spec:
  type: ClusterIP
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
    protocol: TCP
  selector:
    app.kubernetes.io/name: redis