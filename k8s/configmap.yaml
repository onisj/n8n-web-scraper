apiVersion: v1
kind: ConfigMap
metadata:
  name: n8n-scraper-config
  namespace: n8n-scraper
  labels:
    app.kubernetes.io/name: n8n-scraper
    app.kubernetes.io/component: config
    app.kubernetes.io/version: "1.0.0"
data:
  # Application Configuration
  APP_NAME: "n8n-scraper"
  APP_VERSION: "1.0.0"
  ENVIRONMENT: "production"
  DEBUG: "false"
  
  # Server Configuration
  HOST: "0.0.0.0"
  PORT: "8000"
  WORKERS: "4"
  WORKER_TIMEOUT: "300"
  KEEPALIVE: "2"
  
  # Database Configuration
  DB_POOL_SIZE: "20"
  DB_MAX_OVERFLOW: "30"
  DB_POOL_TIMEOUT: "30"
  DB_POOL_RECYCLE: "3600"
  
  # Vector Database Configuration
  VECTOR_DB_HOST: "chromadb"
  VECTOR_DB_PORT: "8000"
  VECTOR_DB_COLLECTION: "n8n_docs"
  VECTOR_DB_PERSIST_DIRECTORY: "/app/data/chroma_db"
  
  # Cache Configuration
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  CACHE_TTL: "3600"
  CACHE_MAX_CONNECTIONS: "50"
  
  # AI/ML Configuration
  AI_MODEL_NAME: "gpt-3.5-turbo"
  AI_MAX_TOKENS: "4000"
  AI_TEMPERATURE: "0.7"
  EMBEDDING_MODEL: "text-embedding-ada-002"
  EMBEDDING_CHUNK_SIZE: "1000"
  EMBEDDING_CHUNK_OVERLAP: "200"
  
  # Scraping Configuration
  SCRAPE_DELAY: "1"
  SCRAPE_TIMEOUT: "30"
  SCRAPE_RETRIES: "3"
  SCRAPE_CONCURRENT_LIMIT: "5"
  USER_AGENT: "n8n-scraper/1.0.0"
  
  # Monitoring Configuration
  METRICS_ENABLED: "true"
  METRICS_PORT: "9090"
  HEALTH_CHECK_INTERVAL: "30"
  
  # Logging Configuration
  LOG_LEVEL: "INFO"
  LOG_FORMAT: "json"
  LOG_FILE: "/app/logs/app.log"
  LOG_MAX_SIZE: "100MB"
  LOG_BACKUP_COUNT: "5"
  
  # Security Configuration
  CORS_ORIGINS: "*"
  RATE_LIMIT_PER_MINUTE: "100"
  MAX_REQUEST_SIZE: "50MB"
  
  # Real-time Configuration
  WEBSOCKET_ENABLED: "true"
  WEBSOCKET_PING_INTERVAL: "25"
  WEBSOCKET_PING_TIMEOUT: "60"
  WEBSOCKET_MAX_CONNECTIONS: "1000"
  
  # Automation Configuration
  AUTOMATION_ENABLED: "true"
  AUTOMATION_SCHEDULE: "0 2 * * *"  # Daily at 2 AM
  AUTOMATION_RETRY_ATTEMPTS: "3"
  AUTOMATION_RETRY_DELAY: "300"
  
  # Backup Configuration
  BACKUP_ENABLED: "true"
  BACKUP_SCHEDULE: "0 3 * * 0"  # Weekly on Sunday at 3 AM
  BACKUP_RETENTION_DAYS: "30"
  
  # Performance Configuration
  ASYNC_POOL_SIZE: "10"
  THREAD_POOL_SIZE: "20"
  MAX_CONCURRENT_REQUESTS: "100"
  REQUEST_TIMEOUT: "300"
  
  # Feature Flags
  FEATURE_AI_PROCESSING: "true"
  FEATURE_REAL_TIME_COLLABORATION: "true"
  FEATURE_PREDICTIVE_ANALYTICS: "true"
  FEATURE_ADVANCED_SEARCH: "true"
  FEATURE_EXPORT_FORMATS: "true"
  
  # External Services
  SLACK_WEBHOOK_ENABLED: "false"
  DISCORD_WEBHOOK_ENABLED: "false"
  EMAIL_NOTIFICATIONS_ENABLED: "false"
  
  # Data Processing
  BATCH_SIZE: "100"
  PROCESSING_QUEUE_SIZE: "1000"
  PROCESSING_TIMEOUT: "600"
  
  # API Configuration
  API_VERSION: "v1"
  API_PREFIX: "/api/v1"
  API_DOCS_ENABLED: "true"
  API_RATE_LIMIT: "1000/hour"
---
apiVersion: v1
kind: Secret
metadata:
  name: n8n-scraper-secrets
  namespace: n8n-scraper
  labels:
    app.kubernetes.io/name: n8n-scraper
    app.kubernetes.io/component: secrets
    app.kubernetes.io/version: "1.0.0"
type: Opaque
data:
  # Database URL (base64 encoded)
  # Example: postgresql://user:password@postgres:5432/n8n_scraper
  database-url: cG9zdGdyZXNxbDovL3VzZXI6cGFzc3dvcmRAcG9zdGdyZXM6NTQzMi9uOG5fc2NyYXBlcg==
  
  # Redis URL (base64 encoded)
  # Example: redis://redis:6379/0
  redis-url: cmVkaXM6Ly9yZWRpczozNjM3OS8w
  
  # OpenAI API Key (base64 encoded)
  # Replace with your actual API key
  openai-api-key: c2stWU9VUl9PUEVOQUlfQVBJX0tFWV9IRVJF
  
  # JWT Secret Key (base64 encoded)
  jwt-secret: WU9VUl9KV1RfU0VDUkVUX0tFWV9IRVJF
  
  # Encryption Key (base64 encoded)
  encryption-key: WU9VUl9FTkNSWVBUSU9OX0tFWV9IRVJF
  
  # Webhook URLs (base64 encoded)
  slack-webhook-url: aHR0cHM6Ly9ob29rcy5zbGFjay5jb20vc2VydmljZXMvWU9VUl9TTEFDS19XRUJIT09LX1VSTA==
  discord-webhook-url: aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvWU9VUl9ESVNDT1JEX1dFQkhPT0tfVVJM
  
  # Email Configuration (base64 encoded)
  smtp-username: WU9VUl9TTVRQX1VTRVJOQU1F
  smtp-password: WU9VUl9TTVRQX1BBU1NXT1JE
  
  # External API Keys (base64 encoded)
  github-token: WU9VUl9HSVRIVUJfVE9LRU5fSEVSRQ==
  monitoring-api-key: WU9VUl9NT05JVE9SSU5HX0FQSV9LRVlfSEVSRQ==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: n8n-scraper-nginx-config
  namespace: n8n-scraper
  labels:
    app.kubernetes.io/name: n8n-scraper
    app.kubernetes.io/component: nginx-config
data:
  nginx.conf: |
    upstream api_backend {
        server n8n-scraper-api:8000;
    }
    
    upstream frontend_backend {
        server n8n-scraper-frontend:3000;
    }
    
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    
    server {
        listen 80;
        server_name _;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' ws: wss:;" always;
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=frontend:10m rate=30r/s;
        
        # API routes
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://api_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }
        
        # Health check endpoint
        location /health {
            proxy_pass http://api_backend/health;
            access_log off;
        }
        
        # Frontend routes
        location / {
            limit_req zone=frontend burst=50 nodelay;
            
            proxy_pass http://frontend_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Static file caching
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    }