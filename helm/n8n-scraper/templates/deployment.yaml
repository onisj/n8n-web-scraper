{{- if .Values.api.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "n8n-scraper.fullname" . }}-api
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "n8n-scraper.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.api.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "n8n-scraper.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        {{- include "n8n-scraper.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
        {{- with .Values.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "n8n-scraper.serviceAccountName" . }}-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: api
        image: "{{ .Values.global.imageRegistry | default "" }}{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.api.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.config.server.port }}
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: {{ include "n8n-scraper.fullname" . }}-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: {{ include "n8n-scraper.fullname" . }}-secrets
              key: redis-url
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "n8n-scraper.fullname" . }}-secrets
              key: openai-api-key
        - name: ENVIRONMENT
          value: {{ .Values.config.app.environment | quote }}
        - name: LOG_LEVEL
          value: {{ .Values.api.env.LOG_LEVEL | quote }}
        - name: WORKERS
          value: {{ .Values.api.env.WORKERS | quote }}
        - name: VECTOR_DB_PATH
          value: "/app/data/chroma_db"
        - name: CACHE_TTL
          value: {{ .Values.config.cache.ttl | quote }}
        {{- range $key, $value := .Values.api.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ include "n8n-scraper.fullname" . }}-config
        resources:
          {{- toYaml .Values.api.resources | nindent 10 }}
        {{- if .Values.api.livenessProbe }}
        livenessProbe:
          {{- toYaml .Values.api.livenessProbe | nindent 10 }}
        {{- end }}
        {{- if .Values.api.readinessProbe }}
        readinessProbe:
          {{- toYaml .Values.api.readinessProbe | nindent 10 }}
        {{- end }}
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        volumeMounts:
        - name: data-storage
          mountPath: /app/data
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: tmp-volume
          mountPath: /tmp
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: data-storage
        {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "n8n-scraper.fullname" . }}-data
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: config-volume
        configMap:
          name: {{ include "n8n-scraper.fullname" . }}-config
      - name: tmp-volume
        emptyDir: {}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- end }}
{{- if .Values.worker.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "n8n-scraper.fullname" . }}-worker
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "n8n-scraper.labels" . | nindent 4 }}
    app.kubernetes.io/component: worker
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.worker.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "n8n-scraper.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: worker
  template:
    metadata:
      labels:
        {{- include "n8n-scraper.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: worker
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
        {{- with .Values.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "n8n-scraper.serviceAccountName" . }}-worker
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: worker
        image: "{{ .Values.global.imageRegistry | default "" }}{{ .Values.worker.image.repository }}:{{ .Values.worker.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.worker.image.pullPolicy }}
        command: ["python", "-m", "n8n_scraper.automation.automation_service"]
        ports:
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: {{ include "n8n-scraper.fullname" . }}-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: {{ include "n8n-scraper.fullname" . }}-secrets
              key: redis-url
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "n8n-scraper.fullname" . }}-secrets
              key: openai-api-key
        - name: ENVIRONMENT
          value: {{ .Values.config.app.environment | quote }}
        - name: LOG_LEVEL
          value: {{ .Values.worker.env.LOG_LEVEL | quote }}
        - name: WORKER_TYPE
          value: {{ .Values.worker.env.WORKER_TYPE | quote }}
        - name: VECTOR_DB_PATH
          value: "/app/data/chroma_db"
        {{- range $key, $value := .Values.worker.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ include "n8n-scraper.fullname" . }}-config
        resources:
          {{- toYaml .Values.worker.resources | nindent 10 }}
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import sys; sys.exit(0)"
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: data-storage
          mountPath: /app/data
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: tmp-volume
          mountPath: /tmp
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: data-storage
        {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "n8n-scraper.fullname" . }}-data
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: config-volume
        configMap:
          name: {{ include "n8n-scraper.fullname" . }}-config
      - name: tmp-volume
        emptyDir: {}
      {{- with .Values.worker.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- end }}
{{- if .Values.frontend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "n8n-scraper.fullname" . }}-frontend
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "n8n-scraper.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "n8n-scraper.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: frontend
  template:
    metadata:
      labels:
        {{- include "n8n-scraper.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: frontend
      annotations:
        {{- with .Values.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: frontend
        image: "{{ .Values.global.imageRegistry | default "" }}{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.frontend.service.targetPort }}
          protocol: TCP
        env:
        - name: NEXT_PUBLIC_API_URL
          value: "http://{{ include "n8n-scraper.fullname" . }}-api:{{ .Values.api.service.port }}"
        - name: NEXT_PUBLIC_WS_URL
          value: "ws://{{ include "n8n-scraper.fullname" . }}-api:{{ .Values.api.service.port }}"
        - name: NEXT_PUBLIC_REALTIME_URL
          value: "http://{{ include "n8n-scraper.fullname" . }}-realtime:{{ .Values.realtime.service.port }}"
        {{- range $key, $value := .Values.frontend.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        resources:
          {{- toYaml .Values.frontend.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: nextjs-cache
          mountPath: /.next
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: nextjs-cache
        emptyDir: {}
      {{- with .Values.frontend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- end }}
{{- if .Values.realtime.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "n8n-scraper.fullname" . }}-realtime
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "n8n-scraper.labels" . | nindent 4 }}
    app.kubernetes.io/component: realtime
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.realtime.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "n8n-scraper.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: realtime
  template:
    metadata:
      labels:
        {{- include "n8n-scraper.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: realtime
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "n8n-scraper.serviceAccountName" . }}-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: realtime
        image: "{{ .Values.global.imageRegistry | default "" }}{{ .Values.realtime.image.repository }}:{{ .Values.realtime.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.realtime.image.pullPolicy }}
        command: ["python", "-m", "n8n_scraper.realtime.collaboration_engine"]
        ports:
        - name: http
          containerPort: {{ .Values.realtime.service.targetPort }}
          protocol: TCP
        env:
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: {{ include "n8n-scraper.fullname" . }}-secrets
              key: redis-url
        - name: ENVIRONMENT
          value: {{ .Values.config.app.environment | quote }}
        {{- range $key, $value := .Values.realtime.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ include "n8n-scraper.fullname" . }}-config
        resources:
          {{- toYaml .Values.realtime.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: tmp-volume
        emptyDir: {}
      {{- with .Values.realtime.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.realtime.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.realtime.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}